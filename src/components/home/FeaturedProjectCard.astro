---
interface Project {
    title: string;
    description: string;
    summaryOne: string;
    summaryTwo: string;
    imageUrl: string;
    repoLink: string;
    link: string;
    technologies: string[];
}

// export function sortProjects(projects: Project[]) {
//     const projectArray: Project[] = [];
//     const reversedProjectArray: Project[] = [];

//     projects.forEach((project, index) => {
//         if (index % 2 === 0) {
//             projectArray.push(project);
//         } else {
//             reversedProjectArray.push(project);
//         }
//     });

//     return { projectArray, reversedProjectArray };
// }

const { project, reverse } = Astro.props;
---
<article class={reverse ? 'reverse': ''}>
    <div class="text">
        <h3>{project.title}</h3>
        <h4>{project.description}</h4>
        <p class="blackbox">
            {project.summaryOne}
            <br />
            {project.summaryTwo}
            <h4>Technologies used include:</h4>
            <ul>
                {project.technologies.map((tech: string[]) => (
                    <li class="tech-tag"><a class="tech-link" href={`/tags/${tech}`}>#{tech}</a></li>
                ))}
            </ul>
            <div class="link-div">
              <a href={project.repoLink} class="repo-btn">Source Code</a>
              <a href={project.link} class="project-btn">Project Page</a>
            </div>
        </p>
    </div>
    <img src={project.imageUrl} alt={project.title} />
</article>
